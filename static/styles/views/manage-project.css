.error {
  background-color: var(--error-color);
}

.removed {
  display: none;
}

svg {
  opacity: 0;
}

#node-detail {
  max-width: 65%;
}

#node-detail header h2 {
  display: inline-block;
  margin: 0;
}

#node-detail .column-textarea {
  display: flex;
  flex-direction: column;
  align-items: left;
}

#node-detail .column-textarea label {
  margin-bottom: 0.6rem;
}

#node-detail select {
  max-width: 50%;
}

#node-detail header {
  display: flex;
  flex-direction: column;
}

#node-detail section {
  margin-bottom: 1rem;
  max-width: 100%;
}

#node-detail label p {
  display: inline-block;
  margin: 0;
}

#node-detail .indicator-label {
  display: flex;
  justify-content: space-between;
  width: 100%;
  font-size: 14.5px;
}

#node-detail i {
  color: var(--success);
  display: inline-block;
  font-size: 1rem;
}

#node-detail .property-label {
  font-weight: bold;
}

#node-detail .property-value {
  text-align: left;
}

#panel-actions {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  margin-right: 1rem;
  width: 12%;
}

.pill-button.selected {
  background: var(--accent);
  color: var(--text-primary);
  box-shadow: none;
}

#node-detail input, textarea {
  background-color: var(--border-color);
  border:           none;
  box-sizing:       border-box;
  color:            var(--text-primary)
  display:          inline-block;
  position:         relative;
  font-family:      system-ui, sans-serif;
  font-size:        1rem;
  outline:          none;
  padding:          0 0.5rem;
  width:            15rem;
}

#node-detail input {
  box-shadow:  none;
  height:      2rem;
  line-height: 2rem;
}

#node-detail textarea {
  padding-top: 0.5rem;
  height:      5rem;
  max-width:   15rem;
  resize:      none;
}

#node-detail label {
  display: inline-block;
  width:   4rem;
}

#node-panel {
  display: flex;
  flex-direction: row;
  height: 100%;
  width: 55%;
  max-width: 45%;
  padding-top: 4rem;
}

#node-properties {
  display: flex;
  flex-direction: column;
  width: 80%;
}

#node-properties article {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

#tree-container {
  height: 100%;
  width: 70%;
}

#tree-container .link {
  stroke: #999;
  stroke-opacity: 0.6;
  stroke-width: 2px;
  marker-end: url(#arrow);
}

#tree-container .node .root {
  fill: var(--accent-bold);
}

#tree-container .node .work {
  fill: var(--accent-light); 
}

#tree-container .node.node-highlight circle {
  stroke-width: 1.7; /* Thinner border */
  filter: drop-shadow(0 0 7px var(--accent-hover-light)); /* Blue glow; adjust color, blur (5px), and opacity */
  pointer-events: none;
}

#tree-container .node circle.root:hover {
  fill: var(--accent-hover-bold);
}

#tree-container .node circle.work:hover {
  fill: var(--accent-hover-light);
}

#tree-container .node circle:hover {
  cursor: pointer;
}

#tree-container .node circle {
  r: 45;
  stroke: white;
  stroke-width: 1.5px;
}

#tree-container .node text {
  font: 12px sans-serif;
  fill: var(--text-primary);
  text-anchor: middle;
  pointer-events: none;
}

#view {
  display: flex;
  flex-direction: row;
}

.flash circle {
  animation: flashAnimation 500ms ease-in-out;
}

/* Keyframes for flash: start at regular, peak at brighter blue, end at regular */
@keyframes flashAnimation {
  20% {
    fill: var(--accent); /* Flash color: a brighter/deeper light blue (deepskyblue) */
  }
}

.loading::before {
  content: '⠋'; /* Starting braille dot pattern */
  display: inline-block;
  width: 1em; /* Fixed width to prevent jumping */
  text-align: center;
}

/* Loading class triggers the animation */
.loading::before {
  animation: brailleSpin 1s steps(10) infinite; /* 1s cycle, 10 steps for the 10 patterns, loops forever */
}

/* Keyframes for the braille spinner cycle: ⠋ ⠙ ⠹ ⠸ ⠼ ⠴ ⠦ ⠧ ⠇ ⠏ */
@keyframes brailleSpin {
  0% { content: '⠋'; }
  10% { content: '⠙'; }
  20% { content: '⠹'; }
  30% { content: '⠸'; }
  40% { content: '⠼'; }
  50% { content: '⠴'; }
  60% { content: '⠦'; }
  70% { content: '⠧'; }
  80% { content: '⠇'; }
  90% { content: '⠏'; }
}
